// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Strainth.DataService.Data;

#nullable disable

namespace Strainth.DataService.Migrations.Migrations
{
    [DbContext(typeof(StrainthContext))]
    partial class StrainthContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Strainth.DataService.Entities.Programming.ProgramDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DayNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProgramSplitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProgramSplitId");

                    b.ToTable("ProgramDetails");
                });

            modelBuilder.Entity("Strainth.DataService.Entities.Programming.ProgramExercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("ProgramDetailId")
                        .HasColumnType("int");

                    b.Property<int>("RepsRangeLower")
                        .HasColumnType("int");

                    b.Property<int>("RepsRangeUpper")
                        .HasColumnType("int");

                    b.Property<int>("RepsThreshold")
                        .HasColumnType("int");

                    b.Property<int>("SetsRangeLower")
                        .HasColumnType("int");

                    b.Property<int>("SetsRangeUpper")
                        .HasColumnType("int");

                    b.Property<decimal>("WeightIncrement")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("ProgramDetailId");

                    b.ToTable("ProgramExcercises");
                });

            modelBuilder.Entity("Strainth.DataService.Entities.Programming.ProgramSplit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProgramSplits");
                });

            modelBuilder.Entity("Strainth.DataService.Entities.Setup.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Abs"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Calves"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Curl"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Extend"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Hinge"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Press"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Pull"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Push"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Row"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Shoulders"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Squat"
                        });
                });

            modelBuilder.Entity("Strainth.DataService.Entities.Setup.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Ab Wheel"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Bicycle Crunch"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Name = "Seated Barbell Calf Raise"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Name = "Standing Calf Raise"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Name = "Incline Dumbbell Curl"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Name = "Dumbbell Spider Curl"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 4,
                            Name = "Rope Pushdown"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
                            Name = "Standing OH Cable Extension"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 5,
                            Name = "Deadlift - Sumo"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 5,
                            Name = "Back Extension"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 5,
                            Name = "Floor Hamstring Curl"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 5,
                            Name = "Pull Through"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 6,
                            Name = "Seated OH Press"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 6,
                            Name = "Arnold Press"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 7,
                            Name = "Chinup"
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 7,
                            Name = "Neutral Grip Pulldown"
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 7,
                            Name = "Underhand Cable Pullover"
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 8,
                            Name = "Incline Bench Press"
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 8,
                            Name = "Incline Dumbbell Press Fly"
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 8,
                            Name = "Close Grip Bench Press"
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 9,
                            Name = "Chest-supported Dumbbell Row"
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 9,
                            Name = "Cable Upright Row"
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 10,
                            Name = "Lateral Raise"
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 10,
                            Name = "Prone Rear Delt Raise"
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 10,
                            Name = "Skiers"
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 11,
                            Name = "Slantboard Front Squat"
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 11,
                            Name = "ATG Split Squat"
                        });
                });

            modelBuilder.Entity("Strainth.DataService.Entities.Programming.ProgramDetail", b =>
                {
                    b.HasOne("Strainth.DataService.Entities.Programming.ProgramSplit", "ProgramSplit")
                        .WithMany("ProgramDetails")
                        .HasForeignKey("ProgramSplitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramSplit");
                });

            modelBuilder.Entity("Strainth.DataService.Entities.Programming.ProgramExercise", b =>
                {
                    b.HasOne("Strainth.DataService.Entities.Setup.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Strainth.DataService.Entities.Programming.ProgramDetail", "ProgramDetail")
                        .WithMany("ProgramExercises")
                        .HasForeignKey("ProgramDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("ProgramDetail");
                });

            modelBuilder.Entity("Strainth.DataService.Entities.Setup.Exercise", b =>
                {
                    b.HasOne("Strainth.DataService.Entities.Setup.Category", "Category")
                        .WithMany("Exercises")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Strainth.DataService.Entities.Programming.ProgramDetail", b =>
                {
                    b.Navigation("ProgramExercises");
                });

            modelBuilder.Entity("Strainth.DataService.Entities.Programming.ProgramSplit", b =>
                {
                    b.Navigation("ProgramDetails");
                });

            modelBuilder.Entity("Strainth.DataService.Entities.Setup.Category", b =>
                {
                    b.Navigation("Exercises");
                });
#pragma warning restore 612, 618
        }
    }
}
